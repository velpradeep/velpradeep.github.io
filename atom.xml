<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Tech Blog...]]></title>
  <link href="http://velpradeep.github.io/atom.xml" rel="self"/>
  <link href="http://velpradeep.github.io/"/>
  <updated>2014-07-18T12:53:57+05:30</updated>
  <id>http://velpradeep.github.io/</id>
  <author>
    <name><![CDATA[Vel Pradeep]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[how to add checkbox in the jqgrid filter search tool bar?]]></title>
    <link href="http://velpradeep.github.io/blog/2014/05/31/how-to-add-checkbox-in-jqgrid-filter/"/>
    <updated>2014-05-31T00:00:00+05:30</updated>
    <id>http://velpradeep.github.io/blog/2014/05/31/how-to-add-checkbox-in-jqgrid-filter</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><script>  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-51531085-1', 'velpradeep.blogspot.in');   ga('send', 'pageview');  </script> <div dir="ltr" style="text-align: left;" trbidi="on"><div>There is no option for adding check box in Search toolbar , but we can add a column with values as check box in grid rows</div><div><br />Alternative way :<br /><br />&nbsp;It contains the following options for common searching</div><div><ol><li><span style="color: red;">Search</span></li><li><span style="color: red;">Stype</span></li><li><span style="color: red;">Searchoptions</span></li><li><span style="color: red;">searchrules</span></li></ol><div><b style="background: rgb(255, 255, 255); border: 0px; font-family: Arial, 'Liberation Sans', 'DejaVu Sans', sans-serif; font-size: 14px; line-height: 17.804800033569336px; margin: 0px; padding: 0px; vertical-align: baseline;">stype :&nbsp;</b>It determines the search type of the field. (text and select)<br /><br /><b>text: &nbsp;</b>create the text element in search toolbar<br /><br /><b>select:</b> create the select(drop down) element in search toolbar<br /><br />Example:<br /><br />I have a grid with the column name system_defined , I want to show the checkbox in each grid row and search toolbar will be shown as a drop down values with multiselect option.<br /><br /><span style="color: lime;">{name:&#8217;system_defined&#8217;,index:&#8217;system_defined&#8217;, edittype:&#8217;checkbox&#8217;, search: true, formatter: &#8220;checkbox&#8221;, editoptions: { value: &#8220;1:Yes;0:No&#8221;},editable:true, searchoptions: { sopt: [&#8216;eq&#8217;], value: &#8220;:All;1:Yes;0:No&#8221; }, stype: &#8216;select&#8217;}</span></div></div></div></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Caching in Rails]]></title>
    <link href="http://velpradeep.github.io/blog/2014/04/24/caching-in-rails/"/>
    <updated>2014-04-24T00:00:00+05:30</updated>
    <id>http://velpradeep.github.io/blog/2014/04/24/caching-in-rails</id>
    <content type="html"><![CDATA[<div class='post'>
<script>  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-51531085-1', 'velpradeep.blogspot.in');   ga('send', 'pageview');  </script><div dir="ltr" style="text-align: left;" trbidi="on"><div>This Post I am going to explain how to achieve the caching mechanism in Rails</div><div><br /></div><div>There are three types of caching techniques</div><div><ol style="text-align: left;"><li><span style="color: red;">Page Caching</span></li><li><span style="color: red;">Action Caching</span></li><li><span style="color: red;">Fragment Caching (Default in rails)</span></li></ol><div><b>Rails 4&nbsp;</b></div></div><div>&nbsp; <b>&nbsp; Static page caching and action caching is removed </b>from <b>core in &nbsp;Rails 4.0</b></div><div><br />If the user wants to enable &nbsp;<b>page and action caching</b>, you will need to add<b> actionpack-page_caching</b> and <b>actionpack-action_caching </b>to your Gemfile.(removed from core in Rails 4.0)</div><div><br /></div><div><b>Note</b><br />&nbsp;Rails caching is <b>disabled </b>by default in the <b>development </b>environment. Make sure you have below the parameter value below set to true in your Rails app config file.<br /><br />#Inside config/environments/development.rb<br /><b>config.action_controller.perform_caching = true</b><br /><b><br /></b><b>Rails caching is enabled in production mode by default.</b><br /><b><br /></b><span style="color: blue;"><b>Page Caching :</b></span><br />In Rails Page Caching, whenever a request is sent to the server, the Rails server would check for the cached page and if that exists it would be served.<br />&nbsp;If it does not exist, Rails server generates the page &amp; cache it. Hence the Rails app won’t have to generate it again during the next request.<br /><br />Page caching is an approach to caching where the entire action output of is stored as a HTML file that the web server can serve without going through Action Pack.<br />Real time Usage in applications<br /><br />Content management systems &#8211; including weblogs and wikis &#8211; have many pages that are a great fit for this approach, but account-based systems where people log in and manipulate their own data are often less likely candidates.<br /><br /><br />Example:<br /><br /><b><span style="color: #cc0000;">class HomeController &lt; ApplicationController</span></b><br /><b><span style="color: #cc0000;">&nbsp; caches_page :index</span></b><br /><span style="color: #cc0000;"><b><br /></b><b>&nbsp; def index</b></span><br /><span style="color: #cc0000;"><b><br /></b><b>&nbsp; end</b></span><br /><b><span style="color: #cc0000;">end</span></b><br /><b><br /></b>To expire the cache when an update is made, we will have to call<br /><br />an <b>expire_page </b>helper method.<br /><br /><b><span style="color: #cc0000;">def update</span></b><br /><b><span style="color: #cc0000;">&nbsp; &nbsp; &nbsp; &nbsp;expire_page :action =&gt; index</span></b><br /><b><span style="color: #cc0000;">end</span></b><br /><br />Here it is assumed that update action is being called when the page is updated. expire_page inside the action makes sure the cached page is purged &amp; new cached page is created during the next call to profile action.<br />This type of caching in Rails is lightning fast, but one main disadvantage of this is that this can’t be used for caching every page. As the requests don’t go to the Rails app, the authentication and access restrictions using before_filter won’t work if page caching is used.<br /><br />The above example is probably the wrong usage of the Rails page cache. You can see that page served by ‘profile’ action has dependency on the current_user (assume it to be logged in user).<br /><br /><br />Let’s say user_1 is the first user to view the page. The page will be generated &amp; cached with contents for user_1 . If user_2 tries to go to his profile page, he will see user_1 content on it. This is plain wrong &nbsp;.</div><div><br /></div><div><br /></div><div><br /></div></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku Deployment with Rails]]></title>
    <link href="http://velpradeep.github.io/blog/2014/04/22/web-hosting-services/"/>
    <updated>2014-04-22T00:00:00+05:30</updated>
    <id>http://velpradeep.github.io/blog/2014/04/22/web-hosting-services</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><br /></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TDD (Rspec) Setup in Rails Application]]></title>
    <link href="http://velpradeep.github.io/blog/2013/06/03/rspec-setup-in-rails-application/"/>
    <updated>2013-06-03T00:00:00+05:30</updated>
    <id>http://velpradeep.github.io/blog/2013/06/03/rspec-setup-in-rails-application</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><script>  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-51531085-1', 'velpradeep.blogspot.in');   ga('send', 'pageview');  </script> <div dir="ltr" style="text-align: left;" trbidi="on"><br /><b><span style="color: red;">How to set-up TDD environment :</span></b><br /><b><br /></b><b>Test Driven Development :</b><br /><b><br /></b>Test Driven Development is a programming practice that instructs &#8220;Developers to write new code only If the automated test cases failed and to eliminate duplication?<br /><br />For every bit of functionality, you first develop a test that specifies and validates what the code will do&#8221;<br /><br /><b>Goal :</b><br /><b><br /></b>Clean code that works<br /><br /><u><b>How to do Rspec in rails application:</b></u><br /><br /><b>1) Create a Rails Project :</b><br /><b><br /></b>Create a rails project and go inside the project directory<br />a) rails new test_app -d mysql<br />b) cd test_app<br /><br /><b>2) Configure Your Test Database for Test Driven Development</b><br /><b><br /></b>In config/database.yml :<br />test:<br />adapter: mysql2<br />encoding: utf8<br />reconnect: false<br />database: msp_test_app<br />pool: 5<br />username: cyncable<br />password: cyncable<br />host: localhost<br /><br /><b>3) In Gem file :</b><br /><b><br /></b>- gem &#8220;rspec&#8221;<br />- gem &#8220;rspec-rails&#8221;<br />Add the following gems for Rspec environment<br /><br /><b>4) Install gems :</b><br /><b><br /></b>Run the following command to install gems in your application directory<br />- bundle install<br /><br /><b>5) Bootstrap Rspec :</b><br />Run the following command to Initialize the?spec/?directory (where specs will reside) with:<br />- rails generate rsepc:install<br />Example :<br />kpradeep@pradeepk:~/projects//test_app$ rails g rsepc:install<br />exists lib/tasks<br />create lib/tasks/rspec.rake<br />create script/autospec<br />create script/spec<br />create script/spec_server<br />create spec<br />create spec/rcov.opts<br />create spec/spec.opts<br /><br /><br /><br /><b>6) Generate Model, Test, and Migration with rspec_model</b><br /><b><br /></b><b>6.1) create new model</b><br />kpradeep@pradeepk:~/projects/test_app$ rails g model ProfileInformation<br /><br /><i>invoke active_record</i><br /><i>create db/migrate/20130508124121_create_profile_informations.rb</i><br /><i>create app/models/profile_information.rb</i><br /><i>invoke test_unit</i><br /><i>create</i><br /><i>test/unit/profile_information_test.rb</i><br /><i>create</i><br /><i>test/fixtures/profile_informations.yml</i><br /><b>6.2)* create new Rspec model*</b><br />To generate the Rspec model for newly created model.Run the following command, it will create new file under spec/models<br /><b>- rails g rspec:model model_name</b><br /><br /><b><u>Example :</u></b><br />kpradeep@pradeepk:~/projects/test_app$ rails g rspec:model ProfileInformation<br />create spec/models/profile_information_spec.rb<br /><br /><b><u>7) create new Controller :</u></b><br /><b><u><br /></u></b>kpradeep@pradeepk:~/projects/test_app$ rails g controller ProfileInformations<br />create app/controllers/profile_informations_controller.rb<br />invoke erb<br />create app/views/profile_informations<br />invoke test_unit<br />create test/functional/profile_informations_controller_test.rb<br />invoke helper<br />create app/helpers/profile_informations_helper.rb<br />invoke test_unit<br />create<br />test/unit/helpers/profile_informations_helper_test.rb<br />invoke assets<br />invoke coffee<br />create<br />app/assets/javascripts/profile_informations.js.coffee<br />invoke scss<br />create<br />app/assets/stylesheets/profile_informations.css.scss<br /><br /><b>7.1) Generate Rspec controller</b><br /><b><br /></b>Run the following command, it will create new file under spec/controller<br />- rails g rspec:controller controller_name<br />Example :<br />kpradeep@pradeepk:~/projects/test_app$ rails g rspec:model ProfileInformation<br />create spec/controllers/profile_informations_controller_spec.rb<br /><br /><b>8) Migrate the DB</b><br /><b><br /></b>kpradeep@pradeepk:~/projects/test_app$ rake db:migrate<br /><br /><b>9) Prepare the Test database</b><br /><b><br /></b>kpradeep@pradeepk:~/projects/test_app$rake db:test:prepare<br /><br /><b>10) Run Rspec</b><br />kpradeep@pradeepk:~/projects/test_app$ <b>rspec spec</b><br /><b><br /></b>it runs the all specs available under specs folder.If u want to run rspec for specific areas like controllers or models can use the<br />following commands<br /><b><br /></b><br /><b>Example :</b><br />Run the rspec test cases under Controllers folders<br />- rspec spec/controllers<br />Run the specific controller test cases<br />- rsepc spec/controllers/profile_informations_controller_spec.rb<br />Run the rspec test cases under Model folders<br />- rspec spec/models<br />Run the specific model test cases<br />- rsepc spec/models/profile_information_spec.rb<br /><br /><br /><br /><br /></div></div></div>
<h2>Comments</h2>
<div class='comments'>
<div class='comment'>
<div class='author'>Vel Pradeep</div>
<div class='content'>
Thanks dude&#8230;.Hereafter i will be keep on posting&#8230;&#8230;&#8230;&#8230;..</div>
</div>
<div class='comment'>
<div class='author'>Deepak M</div>
<div class='content'>
Great buddy. Good to see your blogs. Keep posting. :)</div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Rspec Test Coverage in Rails]]></title>
    <link href="http://velpradeep.github.io/blog/2013/06/03/basic-rspec-test-coverage/"/>
    <updated>2013-06-03T00:00:00+05:30</updated>
    <id>http://velpradeep.github.io/blog/2013/06/03/basic-rspec-test-coverage</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><script>  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-51531085-1', 'velpradeep.blogspot.in');   ga('send', 'pageview');  </script> <div dir="ltr" style="text-align: left;" trbidi="on"><span style="color: #76a5af;"><br /></span><span style="color: #76a5af;"><b>Basic Rspec Test Coverage Model Associations</b></span><br /><b><br /></b><b>How to do Rspec Test Coverage in Rails Models :</b><br /><br />This section covers the basic Rspec test coverage for rails models. Basically, we need to write test coverage to the following areas.<br /><br /><br /><ul style="text-align: left;"><li>Model Associations</li><li>Validations</li><li>Mass assignments (attr_accessible)</li><li>callbacks</li><li>custom validations</li></ul><span style="color: #76a5af;"><br /></span><span style="color: #76a5af;"><b>Model Associations</b></span><br /><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; In Rails, an association is a connection between two Active Record models, we need to test first if the models associated with the specified models or not?<br /><br /><span style="color: #45818e;"><b>Rails supports six types of associations:</b></span><br /><b></b> <br /><ul style="text-align: left;"><li><b>belongs_to</b></li><li><b>has_one</b></li><li><b>has_many</b></li><li><b>has_many :through</b></li><li><b>has_one :through</b></li><li><b>has_and_belongs_to_many</b></li></ul><br /><span style="color: #cc0000;"><b>belongs_to :</b></span><br /><b><br /></b>Example 1:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #6fa8dc;"> <i>belongs_to :currency</i></span><br /><br />&nbsp;we can write the Rspec for belongs_association like this,<br />&nbsp; &nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #3d85c6;">&nbsp;&nbsp; it { should belong_to(:user) }</span><br /><br />Example 2:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #6fa8dc;"> belongs_to :home_team, :class_name =&gt; &#8216;Team&#8217;</span><br /><br />it can be tested like..<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #6fa8dc;">&nbsp; it { should belong_to(:home_team).class_name(:team) }</span><br /><br />Example 3:<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style="color: #6fa8dc;"> belongs_to :home, :class_name =&gt; &#8216;Team&#8217;, :foreign_key =&gt; :home_id</span><br /><br />it can be tested like..<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #6fa8dc;"> it { should belong_to(:home).class_name(:team).foreign_key(:home_id) }</span><br /><br /><span style="color: #cc0000;"><b>has_one :</b></span><br /><b><br /></b>Example 1:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #6fa8dc;">&nbsp;&nbsp;&nbsp; has_one :build_snapshot</span><br /><br />we can write the Rspec test like this,<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #6fa8dc;">&nbsp;&nbsp; it { should have_one(:build_snapshot) }</span><br /><br />Example 2:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #6fa8dc;">&nbsp;&nbsp; has_one :build_snapshot, :dependent =&gt; :destroy</span><br /><br />we can write the Rspec test like this,<br /><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it { should have_one(:build_snapshot).dependent(:destroy)}<br /><br />Example 3:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_one :last_receipt_entered, :class_name =&gt; &#8216;BuildReceipt&#8217; <br /><br />we can write the Rspec test like this,<br /><br />&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it { shouldhave_one(:last_receipt_entered).class_name(&#8220;BuildReceipt&#8221;)}<br /><br /><span style="color: #cc0000;"><b>has_many :</b></span><br /><br />Example 1:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_many :users<br />we can write the Rspec test like this,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it { should have_many(:users) }<br /><br />Example 2:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_many :users, :dependent =&gt; :destroy<br />we can write the Rspec test like this,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it { should have_many(:users).dependent(:destroy)}<br /><br />Example 3:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_many :users, :class_name =&gt; &#8216;Customer&#8217;<br />we can write the Rspec test like this,<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it { should have_many(:users).class_name(&#8220;Customer&#8221;)}<br /><br />Example 4:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_many :snapshots, :class_name =&gt; &#8216;ClientSnapshot&#8217;,:conditions =&gt; [&#8220;released_yn = &#8216;Y&#8217;&#8221;], :order =&gt;&#8217;snapshot_dt DESC&#8217;<br /><br />we can write the Rspec test like this,<br /><br />&nbsp;it { should have_many(:snapshots).class_name(&#8220;ClientSnapshot&#8221;).conditions(&#8220;released_yn = &#8216;Y&#8217;&#8221;).order(&#8220;snapshot_dt DESC&#8221;)}<br /><br /><span style="color: #cc0000;"><b>has_many :through associations :</b></span><br /><b><br /></b><b>Example 1:</b><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_many :client_cash_receipts, :through =&gt; :client_snapshots<br /><br />we can write the Rspec test like this,<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it { should have_many(:client_cash_receipts).through(:client_snapshots) }<br /><br /><span style="color: #cc0000;"><b>has_and_belongs_to_many :</b></span><br /><br />Example 1:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_and_belongs_to_many, :through =&gt; :client_snapshots<br />we can write the Rspec test like this,<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it { should have_and_belong_to_many(:client_cash_receipts) }<br /><br /><span style="color: #cc0000;"><b>has_one :through associations :</b></span><br /><br />Example 1:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; has_one :manager, :through =&gt; :customers<br /><br />we can write the Rspec test like this,<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it { should have_one(:manager).through(:customers) }<br /><span style="color: #45818e;"><br /></span><span style="color: #45818e;"><b>Model Validations :</b></span><br /><b><br /></b><br />In Rails, validation is a process to ensure only the valid data is stored into the database.<br /><span style="color: blue;"><br /></span><span style="color: #6fa8dc;"><b>Validation helpers :</b></span><br /><br /><span style="color: #cc0000;"><b>Testing Presence validation with RSpec</b></span><br /><b><br /></b>Example 1:<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validates :name, :presence =&gt; true<br /><br />we can write Rsepec coverage for this validation helper like the below &#8230;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it {should validate_presence_of(:name)}<br /><br /><span style="color: #cc0000;"><b>presence with custom message</b></span><br /><br />Example<br /><br />&nbsp; &nbsp; &nbsp; validates :manager, :presence =&gt; { :message =&gt; _(&#8220;Manager must exist&#8221;) }<br /><br />we can write Rsepec coverage for this validation helper like the below &#8230;<br /><br />it {should validate_presence_of(:manager).with_message(&#8220;Manager must exist&#8221;)}<br /><br /><span style="color: #cc0000;"><b>Testing length validation with RSpec</b></span><br /><b><br /></b>Example :<br /><br />validates :password, :length =&gt;{:minimum =&gt; 8,:too_short =&gt; &#8220;password is too short&#8221; }<br /><br />validates :password, :length =&gt;{:maximum =&gt; 8,:too_short =&gt; &#8220;password is too long&#8221; }<br /><br />we can write Rsepec coverage for this validation helper like the below &#8230;<br /><br />it { should ensure_length_of(:password).is_at_least(8).with_message(/password is too short/) }<br />it { should ensure_length_of(:password).is_at_least(8).with_message(/password is too long/) }<br /><br /><span style="color: #cc0000;"><b>Testing numericality validation with RSpec</b></span><br /><b><br /></b>Example :<br />- validates :age, :numericality =&gt; { :greater_than =&gt; 18,:only_integer =&gt; true }<br /><br />we can write Rsepec coverage for this validation helper like the below &#8230;<br /><br />it { should validate_numericality_of(:age, :greater_than =&gt; 18, :only_integer =&gt; true) }<br /><br /><span style="color: #cc0000;"><b>ActiveModel Matchers</b></span><br /><b><br /></b>Matchers to test validations and mass assignments:<br /><br />examples :<br /><br /><span style="color: #674ea7;"><b>it { should validate_uniqueness_of(:title) }</b></span><br /><span style="color: #674ea7;"><b>it { should validate_uniqueness_of(:title).scoped_to(:user_id, :category_id) }</b></span><br /><span style="color: #674ea7;"><b>it { should validate_presence_of(:body).with_message(/wtf/) }</b></span><br /><span style="color: #674ea7;"><b>it { should validate_presence_of(:title) }</b></span><br /><span style="color: #674ea7;"><b>it { should validate_numericality_of(:user_id) }</b></span><br /><span style="color: #674ea7;"><b>it { should ensure_inclusion_of(:status).in_array([&#8216;draft&#8217;, &#8216;public&#8217;]) }</b></span><br /><br /><span style="color: #cc0000;"><b>Testing Mass assignments with Rspec</b></span><br /><br /><br /><b>t { should allow_mass_assignment_of :some_field }</b><br /><br /><span style="color: #6aa84f;"><b>Testing callbacks</b></span><br /><b><br /></b>Callbacks are methods that get called at certain moments of an object’s life cycle. we need to test those callbacks in rails models.<br /><br />It executes whenever an Active Record object is created, saved, updated, deleted, validated, or loaded from the database<br /><br /><span style="color: #a64d79;">examples</span><br /><span style="color: #a64d79;"><br /></span><span style="color: #a64d79;"><b>it{ should have_callback(:check_before_destroy).on(:before_destroy) }</b></span><br /><span style="color: #a64d79;"><b>it{ should have_callback(:validate_name).on(:before_create) }</b></span><br /><span style="color: #a64d79;"><b>it{ should have_callback(:validations_before_destroy).on(:after_create) }</b></span><br /><span style="color: #a64d79;"><b>it{ should have_callback(:validate_name).on(:after_save) }</b></span><br /><span style="color: #a64d79;"><b>it{ should have_callback(:check_validations).on(:before_validation) }</b></span><br /><span style="color: #a64d79;"><b>it{ should have_callback(:validate_name).on(:after_validation) }</b></span><br /><br /><br /><br /><br /><br /><br /><br /></div></div></div>
<h2>Comments</h2>
<div class='comments'>
<div class='comment'>
<div class='author'>John Hirbour</div>
<div class='content'>
in newer versions foreign_key should be with_foreign_key</div>
</div>
<div class='comment'>
<div class='author'>Fitria Rahmaani</div>
<div class='content'>
thanks a lot for this one .. save my hours :D<br /><br />but i got an error when i try has_many with class_name and foreign_key<br /><br />Failure/Error: it { should have_many(:subgroups).class_name(&quot;Group&quot;).foreign_key(:parent_id) }<br />     NoMethodError:<br />       protected method `foreign_key&#39; called for #<br /><br />do you know how to resolve it ?</div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Linux commands]]></title>
    <link href="http://velpradeep.github.io/blog/2013/03/28/linux-commands/"/>
    <updated>2013-03-28T00:00:00+05:30</updated>
    <id>http://velpradeep.github.io/blog/2013/03/28/linux-commands</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><h2 style="text-align: left;"><span style="font-family: Verdana, sans-serif;"><b><span style="font-size: x-small;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style="color: red;"><span style="font-size: x-small;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-size: large;">&nbsp;&nbsp;</span></span></b></span></h2><h2 style="text-align: left;"><b style="font-family: Verdana, sans-serif; font-size: small;">Hi Friends&#8230;&#8230;</b></h2><span style="font-family: Verdana, sans-serif; font-size: x-small;"><b><br /></b></span><span style="font-family: Verdana, sans-serif; font-size: x-small;"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Learning Linux commands makes our work much easier. I share some important commands in our routine usage&#8230;&#8230;</b></span><br /><span style="font-family: Verdana, sans-serif; font-size: x-small;"><b><br /></b></span><br /><h3>1. tar command examples :</h3><div>&nbsp;Create a new tar archive.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ tar cvf archive_name.tar dirname/</div><div><br /></div><div>Extract from an existing tar archive.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $ tar xvf archive_name.tar</div><div><br /></div><div><h3>2. grep command examples :</h3></div><div>&nbsp;Search for a given string in a file (case in-sensitive search).</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; $ grep -i &#8220;the&#8221; demo_file<br /><br /><br /><h3>3. shutdown command examples :</h3><div>&nbsp; &nbsp;Shutdown the system and turn the power off immediately.</div><div><br /></div></div><div>&nbsp; # shutdown -h now<br /><br />Shutdown the system after 10 minutes<br />&nbsp; <br />&nbsp; # shutdown -h +10<br /><br />Reboot the system using shutdown command.<br /><br />&nbsp; &nbsp; # shutdown -r now<br /><br />Force the filesystem check during reboot.<br /><br />&nbsp; # shutdown -Fr now<br /><br /><h3>4. ps command examples</h3><div>ps command is used to display information about the processes that are running in the system.<br /><br />While there are lot of arguments that could be passed to a ps command, following are some of the common ones.<br /><br />To view current running processes.<br /><br /><pre><b>$ ps -ef | more</b><br /></pre><pre><b><br /></b></pre>To view current running processes in a tree structure. H option stands for process hierarchy.<br /><pre><b>$ ps -efH | more</b><br /></pre></div><div><br /></div></div><div><h3>5. top command examples</h3>top command displays the top processes in the system ( by default  sorted by cpu usage ). To sort top output by any column, Press O  (upper-case O) , which will display all the possible columns that you  can sort by as shown below.<br /><br /><br />To displays only the processes that belong to a particular user use  -u option. The following will show only the top processes that belongs  to oracle user.<br /><pre></pre><pre><b>  $ top -u oracle</b><br /></pre><pre><b><br /></b></pre><pre><b><br /></b></pre><br /><br /></div><div><br /></div><br /><span style="font-family: Verdana, sans-serif; font-size: x-small;"><b><br /></b></span><span style="font-family: Verdana, sans-serif; font-size: x-small;"><b><br /></b></span></div></div>
]]></content>
  </entry>
  
</feed>
